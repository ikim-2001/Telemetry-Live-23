{"version":3,"sources":["components/shared/Context.jsx","components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/shared/HorizIndicator.jsx","components/hooks/useMouse.jsx","components/shared/DnDList.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","components/sidebar/AddressInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","assets/cloud.svg","assets/local.svg","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","assets/recent.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/shared/VertIndicator.jsx","components/shared/DnDFlex.jsx","components/main/data-display/Number.jsx","components/main/data-display/Numbers.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Context","React","createContext","ContextProvider","Consumer","props","myFunction","updateItem","state","mouseX","mouseY","dragging","sensorData","session","selectedSensors","live","setMouseCoords","x","y","setState","setDragging","setSensorData","setSession","setSelectedSensors","setIsLive","Provider","value","this","children","Component","Toggle","Holder","ToggleButton","active","isLive","onClick","Circle","styled","div","BasicContainer","Container","onMouseEnter","hoverHandler","onMouseLeave","exitHandler","isFlex","flex","expand","scroll","VertSpacer","Spacer","SensorButton","e","previous","setCurrentSensors","filter","element","label","target","forceUpdate","Div","sendIndex","removeIndex","transluscent","isDragging","isHovering","SmallVertSpace","sendStart","removeStart","StyledButton","removeSelected","button","VertIndicator","Line","useMouse","useState","pos","setPos","update","clientX","clientY","useEffect","window","addEventListener","removeEventListener","DndList","context","useContext","startInd","hoverInd","vIndex","sector","canDrop","proppedChildren","setChildren","dndRef","useRef","handleResize","map","child","index","cloneElement","prevState","handleHover","bounds","getSector","drop","getDrop","temp","items","splice","setCurrentItems","Math","floor","getVindex","l","length","ih","height","vspace","startSector","current","getBoundingClientRect","i","_x","_y","dy","top","left","right","FlexTray","ref","SensorDropdown","options","ExampleSensorsByGroups","e1","group","selectedGroup","sensors","e2","id","flat","selected","desiredSensors","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","indexOf","concat","desiredSensor","ExampleSensorsLettersToNames","push","reqBody","fetch","method","headers","body","JSON","stringify","referrerPolicy","then","response","json","user","a","console","log","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","clearSelected","contextType","GroupDropDown","SmallVerticalSpacer","StyledSelect","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","AddressInput","setSocketURL","connected","Sidebar","SidebarContainer","src","logo","alt","url","filterOptions","data","name","toLowerCase","includes","dateString","date","fileList","Date","day","getDate","month","getMonth","getFullYear","Option","components","IconOption","icon","cloud_icon","local_icon","style","display","float","marginLeft","address","printAddress","inputArray","res","newDict","splitDates","split","parseDates","Items","SearchBar","handleFocus","searchVal","handleChange","myRef","createRef","myAPI","APIResponse","zIndex","isClearable","isSearchable","filterOption","getOptionLabel","HorizSpacer","ButtonSpacer","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","initData","time","arr","obj","initialise","Graph","curveType","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","lineData","xScale","yScale","start","end","graphData","setGD","isScrolling","setScrolling","wheelTimeout","count","setCount","orient","setOrient","updateData","gd","sensorArr","sensorName","tvPair","firstTime","unixVal","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","parseUnixToStr","handleTooltip","lockWheel","clearTimeout","setTimeout","zoom","dir","amt","ceil","graphsArr","document","getElementsByClassName","click","cancelWheel","preventDefault","passive","start_idx","fake_idx","end_idx","xscale","yscale","slice","updateScales","bisectTime","bisector","useTooltip","showTooltip","tooltipData","hideTooltip","tooltipTop","tooltipLeft","useCallback","event","localPoint","graph_offset","x0","invert","d0","d1","valueOf","GraphContainer","checkKey","className","scrollleft","scrollright","zoomin","zoomout","recent","jump","jump_recent","SVGContainer","onWheel","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","GridRows","scale","stroke","GridColumns","AxisBottom","tickFormat","parseInt","cleanSeconds","milDiff","round","parseSecToTime","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","onTouchStart","onTouchMove","onMouseMove","from","to","pointerEvents","strokeDasharray","fillOpacity","TooltipWithBounds","random","Clickable","ButtonTray","Graphs","setInterval","rerender","DndFlex","indicator","flexProps","cols","extraCols","rows","indicatorCoords","itemHeight","vSpace","itemWidth","dx","Number","NumberContainer","translucent","Value","unit","percentage","toString","join","Numbers","interval","clearInterval","SemiContext","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","scrollHeight","handleScroll","scrollTop","onScroll","Main","MainContainer","App","handleMouseDown","handleMouseUp","sessionName","updateContextLive","onMouseDown","onMouseUp","GlobalStyle","next","socketURL","updateSocket","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09ccbd49.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Context = React.createContext(null);\nconst ContextConsumer = Context.Consumer;\n\n\nclass ContextProvider extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      dragging: false,\n      sensorData: [], // make object than list\n      session: \"\",\n      selectedSensors: [],\n      live: false,\n      setMouseCoords: (x, y) => {\n        this.setState({ mouseX: x, mouseY: y });\n      },\n      setDragging: (x) => {\n        this.setState({ dragging: x });\n      },\n      setSensorData: (x) => {\n        this.setState({sensorData: x})\n      },\n      setSession: (x) => {\n        this.setState({session: x})\n      },\n      setSelectedSensors: (x) => {\n        this.setState({selectedSensors: x})\n      },\n      setIsLive: (x) => {\n        this.setState({ live: x });\n      },\n    };\n  }\n  myFunction = () => {\n    this.props.updateItem(this.state)\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport { Context, ContextProvider, ContextConsumer }","import styled from 'styled-components';\nimport { Context } from \"../shared/Context\"\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\n\nexport default function Toggle(props) {\n\n  return (\n    <Holder>\n      <>\n        Live Data:\n      </>\n      <ToggleButton\n        active={props.isLive}\n        onClick={() => props.setIsLive(!props.isLive)}\n      >\n        <Circle active={props.isLive} />\n      </ToggleButton>\n    </Holder>\n  );\n}\n\nconst Holder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ToggleButton = styled.div`\n  width: 46px;\n  height: 24px;\n  position: relative;\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\n  transition: background 0.2s ease;\n  border-radius: 12px;\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  top: 2px;\n  left: ${props => (props.active ? 24 : 2)}px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: #fff;\n  transition: left 0.2s ease;\n`;","import styled from 'styled-components';\n\nexport default function BasicContainer(props) {\n  const handleEnter = () => {\n    if (props.hoverHandler) {\n      props.hoverHandler();\n    }\n  }\n\n  const handleLeave = () => {\n    if (props.exitHandler) {\n      props.exitHandler();\n    }\n  }\n\n  return (\n    <Container\n      onMouseEnter={() => {handleEnter()}}\n      onMouseLeave={() => {handleLeave()}}\n      isFlex={props.flex}\n      expand={props.expand}\n      scroll={props.scroll}\n      // grabbable={props.grabbable}\n      // grabbing={props.grabbing}\n    ><div></div>\n      {props.children}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: calc(100% - 18px);\n  border: 1px solid #818181;\n  border-radius: 9px;\n  padding: 8px;\n  height: ${props => (props.expand ? '100%' : 'auto')};\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\n  align-items: center;\n  justify-content: center;\n  ::-webkit-scrollbar-thumb {\n    background-color: #dadce0;\n    border: 4px solid transparent;\n    border-radius: 8px;\n    background-clip: padding-box;  \n  }\n  \n  ::-webkit-scrollbar {\n    width: 16px;\n  }\n`;","import styled from 'styled-components';\n\nexport default function VertSpacer() {\n  return(\n    <Spacer />\n  );\n}\n\nconst Spacer = styled.div`\n  height: 20px;\n`;","\nimport {Component} from 'react'\nimport styled from 'styled-components'\nimport BasicContainer from \"../shared/BasicContainer\";\n\nclass SensorButton extends Component {\n    \n    removeSelected(e){\n        let previous = this.props.selectedSensors\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\n        this.forceUpdate()\n    }\n    state = {  }\n    render() { \n        return ( \n        <Div\n            onMouseEnter={() => {this.props.sendIndex()}}\n            onMouseLeave={() => {this.props.removeIndex()}}\n            transluscent={this.props.isDragging}\n            target={this.props.isHovering}\n        >\n            <SmallVertSpace/>\n            <BasicContainer\n                hoverHandler={() => {this.props.sendStart()}}\n                exitHandler={() => {this.props.removeStart()}}\n            >\n                <Holder>\n                    <>{this.props.label}</>\n                    <StyledButton\n                    onClick={e => this.removeSelected(e)}\n                    value={this.props.label}>\n                        ╳\n                    </StyledButton>\n                </Holder> \n            </BasicContainer>\n            <SmallVertSpace/>\n        </Div>\n        );\n    }\n}\nexport default SensorButton;\n\nconst Holder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nlet StyledButton = styled.button`\n  width: 20px;\n  height: 20x;\n  font-size: 8px;\n  cursor: pointer;\n  border: 0px;\n  background-color: white;\n`;\n\nlet SmallVertSpace = styled.div`\n  height: 5px;\n`;\n\nconst Div = styled.div`\n    opacity: ${props => ((props.transluscent) ? '0.4' : '1')};\n`;","import { useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nexport default function VertIndicator(props) {\n  return(\n    <Line y={props.y} />\n  )\n}\n\nconst Line = styled.div`\n  width: 100%;\n  border-top: 1.5px solid #564fe6;\n  position: absolute;\n  left: 0px;\n  top: ${props => props.y}px;\n`;","import { useState, useEffect } from \"react\";\n\nexport default function useMouse() {\n  const [pos, setPos] = useState({\n    mouseX: 0,\n    mouseY: 0\n  });\n\n  const update = (e) => {\n    setPos({ mouseX: e.clientX, mouseY: e.clientY });\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', update);\n\n    return () => window.removeEventListener('mousemouse', update);\n  }, []);\n\n  return pos;\n}","import React, { useRef, useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport HorizIndicator from './HorizIndicator';\n\nimport useMouse from '../hooks/useMouse';\n\nimport { Context } from './Context';\n\n// Works Kind of like DnD Flex\n// Expected Props\n/// items             dnd items\n/// vspace            space between items\n/// setCurrentItems   item setter\nexport default function DndList(props) {\n  let context = useContext(Context);\n\n  const [state, setState] = useState({\n    startInd: -1,\n    hoverInd: -1,\n    vIndex: 0,\n    sector: 0,\n    canDrop: true,\n  });\n  const [proppedChildren, setChildren] = useState(props.children);\n\n  const dndRef = useRef(null);\n\n  const { mouseX, mouseY } = useMouse();\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    handleResize();\n  }, [props.children]);\n\n  // Assigns Dnd Props to Children\n  useEffect(() => {\n    const addProps = (initProps) => {\n      const handleUnhover = () => {\n        if (!context.dragging) {\n          setState(prevState => ({\n            ...prevState,\n            startInd: -1\n          }));\n        }\n      }\n      \n      const updatedChildren = initProps.map((child, index) => {\n        return React.cloneElement(child, {\n          sendIndex: () => setState(prevState => ({\n            ...prevState,\n            hoverInd: index,\n          })),\n          sendStart: () => handleHover(index),\n          removeIndex: () => setState(prevState => ({\n            ...prevState,\n            hoverInd: -1\n          })),\n          removeStart: () => handleUnhover(),\n          isDragging: context.dragging && index === state.startInd,\n          isHovering: context.dragging && index === state.hoverInd && index !== state.startInd && state.canDrop,\n        });\n      });\n  \n      return updatedChildren;\n    }\n\n    setChildren(addProps(props.children));\n  }, [props.children, state.startInd, state.hoverInd]);\n\n  useEffect(() => {\n    if (state.startInd >= 0 && !context.dragging && state.canDrop) {\n      if (state.bounds) {\n        let sector = getSector(mouseX, mouseY);\n        if (sector >= 0) {\n          let drop = getDrop(sector);\n          \n          let temp = props.items[state.startInd];\n          props.items.splice(state.startInd, 1);\n          props.items.splice(drop, 0, temp);\n          props.setCurrentItems(props.items);\n          handleHover(Math.floor(sector / 2));\n        }\n      }\n    }\n  }, [context.dragging])\n\n  useEffect(() => {\n    if (state.bounds) {\n      setState(prevState => ({\n        ...prevState,\n        vIndex: getVindex(getSector(mouseX, mouseY)),\n      }));\n    }\n  }, [mouseY]);\n\n  useEffect(() => {\n    if (state.bounds) {\n      let l = props.children.length;\n      let ih = (state.bounds.height - (l * props.vspace * 2)) / l;\n      setState(prevState => ({\n        ...prevState,\n        sector: props.vspace + (ih / 2),\n      }))\n    }\n  }, [state.bounds]);\n\n  const getDrop = (sector) => {\n    let startSector = 2 * state.startInd;\n    if (startSector - 1 <= sector && sector <= startSector + 2) {\n      return state.startInd;\n    } else if (sector < startSector) {\n      return state.startInd - Math.floor((startSector - sector) / 2);\n    } else {\n      return state.startInd + Math.floor((sector - startSector - 1) / 2);\n    }\n  }\n  \n  const getVindex = (sector) => {\n    let startSector = 2 * state.startInd;\n\n    return state.startInd - Math.floor((startSector - sector) / 2);\n  }\n\n  const handleResize = () => {\n    if (dndRef.current) {\n      setState(prevState => ({\n        ...prevState,\n        bounds: dndRef.current.getBoundingClientRect(),\n      }));\n    }\n  }\n\n  const handleHover = (i) => {\n    if (!context.dragging) {\n      setState(prevState => ({\n        ...prevState,\n        startInd: i,\n      }));\n    }\n  }\n\n  const getSector = (_x, _y) => {\n    let dy = _y - state.bounds.top;\n    if (dy < 0 || dy > state.bounds.height || _x < state.bounds.left || _x > state.bounds.right) {\n      return -1;\n    }\n    let l = props.children.length;\n    for (let i = 0; i < (l * 2); i++) {\n      if ((state.sector * (i + 1)) > dy) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  return (\n    <FlexTray\n      ref={dndRef}\n      onMouseEnter={() => {setState(prevState => ({\n        ...prevState,\n        canDrop: true,\n      }))}}\n      onMouseLeave={() => {setState(prevState => ({\n        ...prevState,\n        canDrop: false,\n      }))}}\n    >\n      {\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\n        <HorizIndicator\n          y={(state.vIndex * state.sector * 2) - 0.5}\n        />\n      }      \n      {proppedChildren}\n      <div></div>\n    </FlexTray>\n  );\n}\n\nconst FlexTray = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  user-select: none;\n  position: relative;\n`;","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport styled from \"styled-components\";\nimport SensorButton from './SensorButton';\n\nimport { Context} from '../shared/Context';\n\nimport DndList from '../shared/DnDList';\n\nexport default class SensorDropdown extends Component {\n    static contextType = Context;\n    constructor(props){\n        super(props)\n        // all available sensor options\n        this.options = ExampleSensorsByGroups.map(e1 => (\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\n        )).flat();\n        // only sensors selected by user from available options\n        this.selected = []\n        this.desiredSensors = []\n        this.sensorData = []\n    }\n\n    componentDidUpdate(prevProps) {                                           \n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\n            this.updateSelectedGroup(this.props.selectedGroup)\n            this.updateOptions(this.props.selectedGroup)\n            \n        }\n    }\n    updateSelectedGroup(newSelectedGroup) {\n        this.setState({selectedGroup: newSelectedGroup}) \n    }\n    updateOptions(newSelectedGroup) {\n        this.options = ExampleSensorsByGroups.map(e1 => (\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\n        )).flat();\n    }\n\n    addSelected(value){\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\n          let desiredSensor = ExampleSensorsLettersToNames[value[0][\"value\"]]\n          this.desiredSensors.push(desiredSensor)\n          this.context.setSelectedSensors(this.desiredSensors)\n          // REPLACE THIS\n          // PART OF SESSION TOBE DYNAMIC\n          let reqBody = {}\n          if (this.context.live) {\n          reqBody = {\"desiredSensors\": this.desiredSensors, \"nameOfSession\": this.context.session}\n          }\n          else {\n            reqBody = {\"desiredSensors\": this.desiredSensors, \"nameOfSession\": this.context.session[\"name\"]}\n          }\n          // console.log(reqBody)\n\n          // POST request with current sensors selected to use for datpoint plotting later\n          var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \n          {\n            method: \"POST\", \n            headers: { 'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': \"*\"\n          },\n          body: JSON.stringify(reqBody),\n          referrerPolicy: \"unsafe-url\",\n          })\n          .then((response) => response.json())\n          .then((user) => {\n          return user;\n          });\n  \n          const retrieveSensorAPI = () => {\n          sensorData.then((a) => {\n          this.sensorData = a;\n          this.context.setSensorData(a)\n          console.log(this.context.sensorData)\n          });\n          };\n          retrieveSensorAPI();\n\n        }\n    }\n\n    clearSelected(e){\n      this.props.setCurrentSensors([])\n    }\n\n    removeSelected(e){\n        let previous = this.props.selectedSensors\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <>\n                <Select\n                closeMenuOnSelect={false}\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\n                isMulti={true}\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\n                value={this.props.selectedGroup}\n                onChange={(e) => this.addSelected(e)}\n                styles={{\n                    multiValueLabel: (base) => ({\n                      ...base,\n                      width:'100px',\n                      'font-size':'16px'\n                    }),\n                  }}\n                />\n                <SmallVertSpace/>\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\n                <DndList\n                  vspace={5}\n                  items={this.props.selectedSensors}\n                  setCurrentItems={(x) => this.props.setCurrentSensors(x)}\n                >\n                  {this.props.selectedSensors.map((e, i) => (\n                    <SensorButton \n                      key={i}\n                      onClick={this.removeSelected} \n                      label={e.label} \n                      selectedSensors={this.props.selectedSensors} \n                      setCurrentSensors={this.props.setCurrentSensors}\n                    />\n                  ))}\n                </DndList>\n            </>\n        )\n    }\n}\n\n//{this.selected.map((x) => (<p>{x.label}</p>))}\nlet ExampleSensorsByGroups = [\n    {group:\"Safety Sensors\", sensors: [\"Front Left Wheel Speed\", \"Brake Pressure\", \"HV Battery Voltage\", \"Battery Temperature\", \"Coolant Temperature\", \"Power Output\", \"State of Charge (SoC)\", \"Throttle\", \"Motor Temperature\"]},\n    {group:\"Chassis Sensors\", sensors: [\"Sensor Q\", \"Sensor R\", \"Sensor F\"]},\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\n  ];\n\n\nlet ExampleSensorsLettersToNames = {\n  \"Front Left Wheel Speed\": \"FL_WHEEL_SPEED\", \n  \"Brake Pressure\": \"BRAKE_PRESSURE\",\n  \"HV Battery Voltage\": \"HV_BATTERY_VOLTAGE\", \n  \"Battery Temperature\": \"BATTERY_TEMP\",\n  \"Coolant Temperature\": \"COOLANT_TEMP\", \n  \"Power Output\": \"POWER_OUTPUT\", \n  \"State of Charge (SoC)\": \"CHARGE_STATE\",\n  \"Throttle\": \"THROTTLE\", \n  \"Motor Temperature\": \"MOTOR_TEMP\", \n}\n\n\nlet StyledButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n  border: 0px;\n  background-color: white;\n`\nlet SmallVertSpace = styled.div`\n  height: 10px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\n\n\nexport default function GroupDropDown(props){\n\n    const handleOption = (i) => {\n        props.setSelectedGroup(i.target.value)\n    }\n \n    return (\n        <>\n            <>Select Sensor Group:</>\n            <SmallVerticalSpacer></SmallVerticalSpacer>\n            <StyledSelect onChange={handleOption}>\n             {ExampleGroups.map((e, i) => \n                (<StyledOption key={i}>{e.group}</StyledOption>))}\n            </StyledSelect>\n        </>\n    )\n}\n\n// update so that the selector fills the container\nexport const StyledSelect = styled.select`\n    width: 220px;\n    height: 30px;\n    font-size: 14px;\n    font-family: 'Open Sans';\n    cursor: pointer;\n`;\nexport const StyledOption = styled.option`\n    font-size: 14px;\n    cursor: pointer;\n`;\n\nexport const SmallVerticalSpacer = styled.div`\n    height: 10px;\n`;\n\nlet ExampleGroups = [\n    {id: 1, group:\"Safety Sensors\"},\n    {id: 2, group:\"Chassis Sensors\"},\n    {id: 3, group:\"Aero Sensors\"},\n    {id: 4, group:\"Suspension Sensors\"},\n    {id: 5, group:\"Powertrain Sensors\"}\n];","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport BasicContainer from '../shared/BasicContainer';\nimport VertSpacer from '../shared/VertSpacer';\nimport SensorDropdown from './SensorDropdown';\nimport GroupDropDown from './GroupDropDown';\n\nexport default function SensorSelector(props) {\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\n\n  return(\n    <SelectorContainer>\n      <BasicContainer>\n        <GroupDropDown \n        selectedGroup={selectedGroup}\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\n        />\n      </BasicContainer>\n      <VertSpacer />\n      <BasicContainer expand scroll>\n        <SensorDropdown \n        selectedGroup={selectedGroup}\n        selectedSensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n        />\n      </BasicContainer>\n    </SelectorContainer>\n  );\n}\n\nconst SelectorContainer = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow-y: hidden;\n  overflow-x: hidden;\n`;\n\n\n","import { useState, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport BasicContainer from '../shared/BasicContainer';\nimport { Context } from '../shared/Context';\n\nexport default function NameInput(props) {\nlet context = useContext(Context);\n  let [focus, setFocus] = useState(false);\n  let [input, setInput] = useState('');\n\n  const handleKeyPress = (e) => {\n      if (e.keyCode === 13) {\n          e.target.blur();\n          context.setSession(input)\n      }\n  }\n\n  const handleBlur = () => {\n      setFocus(false);\n      props.setSessionName(input);\n      context.setSession(input)\n  }\n\n  return(\n    <BasicContainer flex>\n        <StyledInput \n            type=\"text\" \n            placeholder = \"Enter Session Name\"\n            value={input}\n            onInput={(e) => setInput(e.target.value)}\n            onFocus={(e) => setFocus(true)}\n            onBlur={(e) => handleBlur()}\n            onKeyDown={(e) => {handleKeyPress(e)}}\n            focus={focus}\n        />\n    </BasicContainer>\n  );\n}\n\nconst StyledInput = styled.input`\n    border: none;\n    padding-top: 3px;\n    width: 100%;\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\n    ::placeholder {\n        font-weight: normal;\n    }\n    text-overflow: ellipsis;\n    :focus {\n        outline: none;\n    }\n`;","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport BasicContainer from '../shared/BasicContainer';\n\nexport default function AddressInput(props) {\n  let [focus, setFocus] = useState(false);\n  let [input, setInput] = useState('');\n\n  useEffect(() => {\n    props.setSocketURL(input);\n  }, [input])\n\n  const handleKeyPress = (e) => {\n      if (e.keyCode === 13) {\n          e.target.blur();\n      }\n  }\n\n  const handleBlur = () => {\n      setFocus(false);\n  }\n\n  return(\n    <BasicContainer flex>\n        <StyledInput \n            type=\"text\" \n            placeholder = \"Enter Server Address\"\n            value={input}\n            onInput={(e) => setInput(e.target.value)}\n            onFocus={(e) => setFocus(true)}\n            onBlur={(e) => handleBlur()}\n            onKeyDown={(e) => {handleKeyPress(e)}}\n            focus={focus}\n            connected={props.connected}\n        />\n    </BasicContainer>\n  );\n}\n\nconst StyledInput = styled.input`\n    border: none;\n    padding-top: 3px;\n    width: 100%;\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\n    ::placeholder {\n        font-weight: normal;\n    }\n    text-overflow: ellipsis;\n    :focus {\n        outline: none;\n    }\n    color: ${props => (props.focus ? \"black\" : (props.connected ? '#42D060' : '#BE0707')) } ;\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import styled from 'styled-components';\n\nimport Toggle from './Toggle';\nimport SensorSelector from './SensorSelector';\nimport NameInput from './NameInput';\nimport AddressInput from './AddressInput';\nimport BasicContainer from '../shared/BasicContainer';\nimport VertSpacer from '../shared/VertSpacer';\n\n\nimport logo from '../../assets/logo.png';\n\nexport default function Sidebar(props) {\n  return (\n    <SidebarContainer>\n      <img src={logo} alt='NU Formula Logo' />\n      <VertSpacer />\n      <BasicContainer>\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\n      </BasicContainer>\n      <VertSpacer />\n      {props.isLive &&\n        <>\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\n          <VertSpacer />\n        </>\n      }\n      <AddressInput\n        setSocketURL={(url) => props.setSocketURL(url)}\n        connected={props.connected}\n      />\n      <VertSpacer />\n      <SensorSelector\n        currentSensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n      />\n    </SidebarContainer>\n  );\n}\n\nconst SidebarContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 240px;\n  height: calc(100vh - 60px);\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","export default __webpack_public_path__ + \"static/media/cloud.1cda6baa.svg\";","export default __webpack_public_path__ + \"static/media/local.f38d9902.svg\";","import React, { Component } from 'react';\nimport Select, { components } from 'react-select';\nimport cloud_icon from '../../../assets/cloud.svg';\nimport local_icon from '../../../assets/local.svg';\n// import  { address } from \"../../../apiCalls\";\nimport { Context } from '../../shared/Context'\n\nconst filterOptions = (option, input) => {\n    if (input) {\n        if (option.data.name.toLowerCase().includes(input.toLowerCase()) || \n        dateString(option.data.date).includes(input)){\n          return true;\n        } else {\n          return false;\n        }\n    }\n    return true;\n    };\n\nlet fileList = [{name:\"DriveDay10.7.22\", date: new Date(2022,3,5), label: \"DriveDay10.7.23\"}, {name: \"file2\", date:new Date(2021,10,12), label: \"local\"}, \n{name: \"file3\", date:new Date(2002,11,11), label: \"cloud\"},{name: \"file4\", date:new Date(2021,9,5), label: \"local\"}];\n\n\nconst dateString = (date) => {\n    let day = date.getDate()\n    let month = date.getMonth()\n    let year = date.getFullYear()\n    month = (month + 1 < 10) ? \"0\" + (month + 1) : (month + 1)\n    day = (day < 10) ? \"0\" + day : day\n    return month + \"/\" + day + \"/\" + year;\n}\n\n\nconst { Option } = components;\nconst IconOption = props => {\n  let icon = (props.data.label == \"cloud\") ? cloud_icon : local_icon \n  return(\n  <Option {...props}>\n    {props.data.name} \n    <div style={{display: \"inline\", float: \"right\"}}>\n    {dateString(props.data.date)}\n    <img\n      src={icon}\n      style={{ width: 15, marginLeft: 20 }}\n      alt={props.data.label}\n    />\n    </div>\n  </Option>\n);\n}\n\n\nconst address = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-items\",\n{\n  method: \"GET\", \n  headers: { 'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': \"*\",\n            \"Access-Control-Allow-Methods\": \"*\" },\n  referrerPolicy: \"unsafe-url\",\n})\n.then((response) => response.json())\n.then((user) => {\nreturn user;\n});\n\nconst printAddress = () => {\naddress.then((a) => {\nfileList = parseDates(a.Items)\n\n});\n};\n\nfunction parseDates(inputArray) {\nlet res = []\nfor (let i = 0; i < inputArray.length; i++) {\nlet newDict = {}\nnewDict[\"name\"] = inputArray[i][\"Session Name\"];\nlet splitDates = inputArray[i][\"Date\"].split(\",\");\nnewDict[\"date\"] = new Date(splitDates[0], splitDates[1], splitDates[2]);\nnewDict[\"label\"] = \"local\";\nres.push(newDict)\n}\nreturn res\n}\n\nexport default class SearchBar extends Component {\n  static contextType = Context;\n  constructor(props){\n    super(props);\n    this.state = {searchVal: null}\n    this.myRef = React.createRef();\n    this.myAPI = {APIResponse: null}\n  }\n  handleFocus= () => {\n    this.setState({searchVal : null})\n    printAddress();\n  };\n  handleChange = value => {\n    this.setState({searchVal : value})\n    this.myRef.current.blur()\n    printAddress();\n    this.context.setSession(value);\n  };\n\n  \n\n  render() {\n    return (\n        <div style={{width: \"100%\", zIndex:\"2\"}}>\n        <Select\n        ref={this.myRef}\n        placeholder={\"Search for file by name or MM/DD/YYYY\"}\n        isClearable\n        isSearchable\n        name=\"search\"\n        options={fileList}\n        filterOption={filterOptions}\n        onFocus={this.handleFocus}\n        onChange={this.handleChange}\n        getOptionLabel={option =>\n            `${option.name} (${dateString(option.date)})`\n        }\n        components={{ Option: IconOption }}\n        value = {this.state.searchVal}\n      />\n      </div>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport default function HorizSpacer() {\n  return(\n    <ButtonSpacer />\n  );\n}\n\nconst ButtonSpacer = styled.div`\n  width: 20px;\n`;","export default __webpack_public_path__ + \"static/media/upload.78116883.svg\";","import { useRef, useState } from 'react';\nimport styled from \"styled-components\";\n\nimport HorizSpacer from \"../../shared/HorizSpacer\";\n\nimport upload from '../../../assets/upload.svg';\n\nexport default function ButtonTray() {\n  const [file, setFile] = useState(null)\n\n  const uploadRef = useRef(null);\n\n  const handleFiles = (e) => {\n    let f = e.target.files[0];\n    setFile(f);\n  }\n\n  return(\n    <UploadHolder>\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\n      <HorizSpacer />\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\n      <HorizSpacer />\n    </UploadHolder>\n  );\n}\n\nconst UploadHolder = styled.div`\n  flex: 0.1;\n  max-width: 110px;\n  display: flex;\n  flex-direction: row;\n  justify-content: right;\n`;\n\nconst Clickable = styled.img`\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport default function SVGButton(props) {\n  return(\n    <StyledSVG\n      src={props.src}\n      alt={props.label}\n      width='25px'\n      height='25px'\n      onClick={() => {props.setViewState(props.label)}}\n      selected={props.selected}\n    />\n  );\n}\n\nconst StyledSVG = styled.img`\n  cursor: pointer;\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\n  transition: 0.07s ease;\n`;\n","import styled from \"styled-components\";\n\nexport default function RowHolder(props) {\n  return(\n    <StyledHolder>\n      {props.children}\n    </StyledHolder>\n  );\n}\n\nconst StyledHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;","export default __webpack_public_path__ + \"static/media/stop.6959f135.svg\";","export default __webpack_public_path__ + \"static/media/play.1e94e6ce.svg\";","export default __webpack_public_path__ + \"static/media/pause.48f7c4bd.svg\";","import { Context } from \"../../shared/Context\"\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\n\nimport SVGButton from './SVGButton';\nimport RowHolder from '../../shared/RowHolder';\nimport HorizSpacer from '../../shared/HorizSpacer';\n\nimport stop from '../../../assets/stop.svg';\nimport play from '../../../assets/play.svg';\nimport pause from '../../../assets/pause.svg';\n\nexport default function Topbar(props) {\n  let context = useContext(Context);\n  function changeLiveStatus(buttonState) {\n    if (buttonState == \"play\"){\n      context.setIsLive = true\n    }\n    else if (buttonState == \"pause\" || buttonState == \"stop\") {\n      context.setIsLive = false\n    }\n  }\n  return (\n    <RowHolder>\n      <SVGButton\n        src={stop}\n        label={'stop'}\n        setViewState={props.setViewState}\n        selected={props.viewState === 'stop'}\n      />\n      <HorizSpacer />\n      {props.viewState !== 'play'\n        ? <SVGButton\n            src={play}\n            label={'play'}\n            setViewState={props.setViewState}\n            selected={props.viewState === 'pause'}\n          />\n        : <SVGButton\n            src={pause}\n            label={'pause'}\n            setViewState={props.setViewState}\n            selected={props.viewState === 'play,'}\n          />\n      }\n    </RowHolder>\n  );\n}\n","import styled from 'styled-components';\n\nexport default function StyledStatus(props) {\n  return(\n    <Status valid={props.valid}>\n      {props.children}\n    </Status>\n  );\n}\n\nconst Status = styled.div`\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\n`;","import styled from 'styled-components';\n\nimport SearchBar from './SearchBar';\nimport Upload from './Upload';\nimport ButtonTray from './ButtonTray';\nimport RowHolder from '../../shared/RowHolder';\nimport StyledStatus from '../../shared/StyledStatus';\n\nexport default function Topbar(props) {\n  var display;\n  if (props.isLive) {\n    display =\n      <>\n        <RowHolder>\n          Status:\n          {props.receiving\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\n            : <StyledStatus> No Data Received</StyledStatus>        // Keep whitespace before text\n          }\n        </RowHolder>\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\n      </>;\n  } else {\n    display =\n    <>\n      <SearchBar/>\n      {/* <Upload /> */}\n    </>;\n  }\n\n  return (\n    <Container>\n      {display}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: calc(100% + 16px);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport default function NumGraphToggle(props) {\n  const handleClick = () => {\n    if (props.dispType === 'graphs') {\n      props.setDispType('numbers');\n    } else {\n      props.setDispType('graphs');\n    }\n  }\n\n  return(\n    <ReferenceFrame>\n      <StyledDiv>\n        <LabelHolder onClick={() => handleClick()}>\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\n          <Label active={props.dispType === 'numbers'}>Number</Label>\n        </LabelHolder>\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\n      </StyledDiv>\n    </ReferenceFrame>\n  );\n}\n\nconst ReferenceFrame = styled.div`\n  position: relative;\n  float: right;\n  right: 136px;\n  top: -42px;\n`;\n\nconst StyledDiv = styled.div`\n  width: 136px;\n  height: 34px;\n  top: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst LabelHolder = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  background: #fafafa;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  color: ${props => (props.active ? '#000' : '#838181')};\n  font-size: 12px;\n  z-index: 1;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.1s ease;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => (props.isLeft ? 0 : 68)}px;\n  width: 68px;\n  height: 100%;\n  background-color: #e5e4fB;\n  display: inline;\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\n  transition: all 0.1s ease;\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.7b05da38.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.8e3b1130.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.f628affa.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.dc533183.svg\";","export default __webpack_public_path__ + \"static/media/recent.40d9e006.svg\";","import React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\nimport { max, bisector } from 'd3-array';\nimport { MarkerCircle } from '@visx/marker';\nimport { useTooltip } from '@visx/tooltip';\nimport { localPoint } from '@visx/event';\nimport { Group } from '@visx/group';\nimport { LinePath, Bar, Line, AreaClosed } from '@visx/shape';\nimport * as allCurves from '@visx/curve';\nimport { scaleLinear } from '@visx/scale';\nimport { AxisLeft, AxisBottom } from '@visx/axis';\nimport styled from \"styled-components\";\nimport scrollleft from '../../../assets/scrollleft.svg';\nimport scrollright from '../../../assets/scrollright.svg';\nimport zoomin from '../../../assets/zoomin.svg';\nimport zoomout from '../../../assets/zoomout.svg';\nimport recent from '../../../assets/recent.svg';\nimport { GridRows, GridColumns } from '@visx/grid';\nimport { TooltipWithBounds } from '@visx/tooltip';\nimport { Context} from \"../../shared/Context\"\n\n\n\n/*****************  INIT (but its british??)  ****************/\nconst n = 20; // amount of seconds to show\nlet initData = initialise(); //data arr\nfunction initialise() {\n    var time = -1;\n    var arr = [];\n    var data_length = 1;\n    for (var i = 0; i < data_length; i++) {\n        var obj = {\n            time: ++time,\n            // value: Math.floor(Math.random() * 100)\n            value: 0\n        };\n        arr.push(obj);\n    }\n    return arr;\n}\n\n\n\n// CONTINUOUSLY CALL API TO UPDATE REACT ON CHANGES IN\n\nexport default function Graph(props) {\n    let context = useContext(Context);\n    /*****************  CONSTANTS  ****************/\n    const height = 300\n    const width = props.width > 500 ? props.width * 0.9 : 450\n    const graph_offset = 30\n    const curveType = 'curveLinear'\n    // data accessors\n    const getX = (d) => d.time;\n    const getY = (d) => d.value;\n    const ExampleSensorsLettersToNames = {\n        \"Front Left Wheel Speed\": [\"FL_WHEEL_SPEED\", \"Speed (m/s)\"],\n        \"Brake Pressure\": [\"BRAKE_PRESSURE\", \"Pounds/Square-Inch (PSI)\"],\n        \"HV Battery Voltage\": [\"HV_BATTERY_VOLTAGE\", \"Volts (V)\"],\n        \"Battery Temperature\": [\"BATTERY_TEMP\", \"Temperature (°C)\"],\n        \"Coolant Temperature\": [\"COOLANT_TEMP\", \"Temperature (°C)\"],\n        \"Power Output\": [\"POWER_OUTPUT\", \"Power (kW)\"],\n        \"State of Charge (SoC)\": [\"CHARGE_STATE\", \"Percent (%)\"],\n        \"Throttle\": [\"THROTTLE\", \"Percent (%)\"],\n        \"Motor Temperature\": [\"MOTOR_TEMP\", \"Temperature (°C)\"]\n      }\n    // scales\n\n    let xScaleInit = scaleLinear({\n        domain: [0, max(initData, getX)],\n        range: [0, width - 3*graph_offset]\n    });\n    let yScaleInit = scaleLinear({\n        domain: [0, max(initData, getY) * 1.2],\n        range: [height * 0.85, height * 0.1]\n    });\n    \n    // state variables\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:initData.length-1});\n    const [isScrolling, setScrolling] = useState(false)\n    const wheelTimeout = useRef()\n    const buttonRef = useRef(null)\n    const [count, setCount] = useState(0)\n    const [clickCount, setClickCount] = useState(100)\n    const [orient, setOrient] = useState(0)\n    var historical_count = 0\n    \n    /*****************  UPDATERS  ****************/\n    // automate the clicking (or updating) of the live graph\n\n    //autopopulate the graph during live\n\n    useEffect(() => {\n        let graphsArr = document.getElementsByClassName(\"clickMe\")\n          if (context.live) {\n            for (let i = 0; i < graphsArr.length; i++) {\n                graphsArr[i].click();\n              }\n          }\n      }, [context.sensorData]);\n\n    // historical autopopulate\n    //   useEffect(() => {\n    //     const interval = setInterval(() => {\n    //     let graphsArr = document.getElementsByClassName(\"clickMe\")\n    //     setClickCount(clickCount+1)\n    //       if (!context.live && count < clickCount) {\n    //         for (let i = 0; i < graphsArr.length; i++) {\n    //             graphsArr[i].click();\n    //           }\n    //       }\n    //     }, 1000);\n    //     return () => clearInterval(interval);\n    //   }, []);\n\n\n      /***************** UPDATES **********************/\n\n    function updateScales(){\n        let start_idx = Math.floor(graphData.start)\n        let fake_idx = max([Math.ceil(graphData.end)-1, 0])\n        let end_idx = max([Math.ceil(graphData.end), 0])\n        let xscale = scaleLinear({\n            domain: [getX(graphData.lineData[start_idx]), getX(graphData.lineData[fake_idx])],\n            range: [0, width - 3*graph_offset]\n        });\n        let yscale = scaleLinear({\n            domain: [0, max(graphData.lineData.slice(start_idx, end_idx), getY) * 1.2],\n            range: [height * 0.85, height * 0.1]\n        })\n        setGD(prevState => ({\n            ...prevState,\n            xScale: xscale,\n            yScale: yscale\n        }));\n    }\n\n    // function parseTimeInt(timeStr){\n    //     let timeArr = timeStr.split(\":\")\n    //     return parseInt(timeArr[0])*60+parseInt(timeArr[1])\n    // }\n\n    function parseUnixToStr(unixVal) {\n        let unix_timestamp = unixVal\n        // Create a new JavaScript Date object based on the timestamp\n        // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n        var date = new Date(unix_timestamp * 1000);\n        // Hours part from the timestamp\n        var hours = date.getHours();\n        // Minutes part from the timestamp\n        var minutes = \"0\" + date.getMinutes();\n        // Seconds part from the timestamp\n        var seconds = \"0\" + date.getSeconds();\n\n        // Will display time in 10:30:23 format\n        var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n        return formattedTime\n    }\n\n    function parseSecToTime(seconds) {\n        var hours = parseInt(Math.floor(seconds / 3600))\n        var minutes = parseInt(Math.floor((seconds % 3600) / 60))\n        var cleanSeconds = parseInt((seconds % 3600) % 60)\n        const milDiff = seconds-parseInt(seconds)\n        var milliseconds = 10*(Math.round(1000*milDiff)/1000);\n        return hours + \":\" + minutes + \":\" + cleanSeconds + \".\" + milliseconds\n\n    }\n\n    function updateData(gd, e) {\n\n        let sensorArr = context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]]\n        // setClickCount(sensorArr.length)\n        if (sensorArr) {\n            // setCount(sensorArr.length-1)\n        if (count < sensorArr.length-1) {\n            setCount(count + 1)\n            setOrient(count+1)\n        }\n        var tvPair = sensorArr[sensorArr.length-1]\n        if (count >= sensorArr.length) {\n            if (sensorArr !== []) {\n                let tvPair = context.sensorData[ExampleSensorsLettersToNames[props.sensorName]][sensorArr.length-1[0]]\n            }\n        }\n        else{\n            tvPair = context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]][count]\n        }\n        if (count >= sensorArr.length-1) {\n            return\n        }\n        let start = gd.start\n        if (gd.end >= n) { // overloaded data\n            start = gd.start + 1;\n        }\n        let end = gd.end + 1;\n        var firstTime =  context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]][0][0]\n\n        var currTime = parseUnixToStr(tvPair[0])\n        var obj = {\n            time: tvPair[0]-firstTime,\n            value: tvPair[1]\n        };\n\n        let temp = [...gd.lineData];\n        temp.push(obj);\n        if (isScrolling){\n            setGD(prevState => ({\n                ...prevState,\n                lineData: temp,\n              }));\n              setScrolling(!isScrolling)\n        } else {\n            setGD(prevState => ({\n                ...prevState,\n                lineData: temp,\n                start: start,\n                end: end\n              }));\n        }\n        handleTooltip(e);\n    }\n    }\n\n\n    /*****************  MOUSE AND KEY SHITSHOW  ****************/\n    function lockWheel(){\n        // while wheel is moving, do not release the lock\n        clearTimeout(wheelTimeout.current)\n\n        // flag indicating to lock page scrolling (setTimeout returns a number)\n        wheelTimeout.current = setTimeout(() => {\n        wheelTimeout.current = false\n        }, 300)\n    }\n\n    function handleMouseScroll(e){\n        let gd = graphData;\n        let dir;\n        let scroll_amt = 0.2;\n        let zoom_amt = 0.2;\n        \n        lockWheel()\n\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\n            if (!isScrolling){\n                setScrolling(true)\n            }\n            scroll(gd, dir, scroll_amt,e)\n            \n        } else {\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\n            zoom(gd, dir, zoom_amt,e)\n        }\n    }\n\n    function zoom(gd, dir, amt,e){\n        let start;\n        if (dir == \"in\"){\n            if (gd.start < (gd.end - 2)) {\n                start = gd.start + amt\n            } else {return}\n        } else if (dir == \"out\"){\n            if (gd.start > amt) {\n                start = gd.start - amt\n            } else {return}\n        }\n        setGD(prevState => ({\n            ...prevState,\n            start: start,\n        }));\n        handleTooltip(e);\n    }\n\n    function scroll(gd, dir, amt,e){\n        let start, end;\n        if (dir == \"right\"){\n            if (orient >= count){return}\n            else{setOrient(orient+1)}\n            if (gd.end < max(gd.lineData, getX) - amt) {\n                start = gd.start + amt\n                end = gd.end + amt\n            } else {return}\n        } else if (dir == \"left\" || orient <= 0){\n            if (gd.start <= 1){return}\n            else{setOrient(orient-1)}\n            if (gd.start > amt) {\n                start = gd.start - amt\n                end = gd.end - amt\n            } else {return}\n        }\n        if (Math.ceil(end) == graphData.lineData.length - 1){\n            setScrolling(false);\n        }\n        setGD(prevState => ({\n            ...prevState,\n            start: start,\n            end: end\n        }));\n        handleTooltip(e);\n    }\n\n    function checkKey(e) {\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1); lockWheel(); // up arrow \n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1); lockWheel() // down arrow\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1); lockWheel() // left arrow \n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1); lockWheel() // right arrow\n        } else if (e.keyCode == '65') { updateData(graphData, e)// space\n        }\n    }\n\n    function jump_recent(e){\n        let start, end\n        let jump = graphData.lineData.length - 1 - graphData.end\n        end = graphData.end + jump\n        start = graphData.start + jump\n        setScrolling(false);\n        setGD(prevState => ({\n            ...prevState,\n            start: start,\n            end: end\n        }));\n    }\n\n    /*****************  USE EFFECT BULLSHIT  ****************/\n    useEffect(() => {\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\n        return () => document.body.removeEventListener('wheel', cancelWheel)\n    }, [])\n    useEffect(() => {\n        updateScales()\n    }, [graphData.lineData, graphData.start, graphData.end])\n    /*****************  TOOLTIP BULLSHIT  ****************/\n    // takes left of time\n    const bisectTime = bisector((d) => d.time).left;\n     // a bunch of tooltip defs\n    const { showTooltip,\n        tooltipData,\n        hideTooltip,\n        tooltipTop = 0,\n        tooltipLeft = 0, } = useTooltip();\n    // tooltip handler\n    const handleTooltip = useCallback(\n        (event) => {\n          let {x} = localPoint(event) || {x: graph_offset*2}; // x of mouse\n          x -= (graph_offset*2)\n          const x0 = graphData.xScale.invert(x); // maps x -> time \n          const index = bisectTime(graphData.lineData, x0, 1); // finds index of the middle time\n          const d0 = graphData.lineData[index - 1]; \n          const d1 = graphData.lineData[index];\n          let d = d0;\n          if (d1 && getX(d1)) {\n            d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\n          }\n          showTooltip({\n            tooltipData: d,\n            tooltipLeft: graphData.xScale(getX(d)),\n            tooltipTop: graphData.yScale(getY(d)),\n          });\n        },\n        [showTooltip, graphData.yScale, graphData.xScale],\n      );\n\n\n\n  return (\n        <GraphContainer\n            onKeyDown={(e) => checkKey(e)}\n            onMouseEnter={() => {props.sendIndex(); props.sendStart();}}\n            onMouseLeave={() => {props.removeIndex(); props.removeStart();}}\n        >\n            <button className='clickMe' onClick={(e) => updateData(graphData,e)}>update</button> <br/>\n            {/* navigation buttons */}\n            <ButtonTray width={width}>\n                <div>\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"left\", 1, e)}} />\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"right\", 1, e)}} />\n                </div>\n                <div>\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"in\", 1,e)}} />\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"out\", 1,e)}} />\n                </div>\n                <Clickable src={recent} alt='recent' width='25px' height='25px' onClick={(e) => {jump_recent(e)}} />\n            </ButtonTray>\n            <SVGContainer width={width}>\n            <div>{props.sensorName}</div>\n            {/* graph  */}\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} /> {/* pretty point */}\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} /> {/* border rect */}\n                <Group left={graph_offset*2}>\n                    {/* axis and grids */}\n                    <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"Time\"} tickFormat={(value: number, i: number) =>parseSecToTime(value)} />\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={ExampleSensorsLettersToNames[props.sensorName][1]}/>\n                    {/* plots line */}\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)).map((d, j) => (\n                        <circle\n                        key={j}\n                        r={2}\n                        cx={graphData.xScale(getX(d))}\n                        cy={graphData.yScale(getY(d))}\n                        stroke=\"#5048E5\"\n                        />\n                    ))}\n                    <LinePath\n                    curve={allCurves[curveType]}\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\n                    stroke=\"#5048E5\"\n                    strokeWidth={2}\n                    strokeOpacity={1}\n                    shapeRendering=\"geometricPrecision\"\n                    markerMid=\"url(#marker-circle)\"\n                    markerStart=\"url(#marker-circle)\"\n                    markerEnd=\"url(#marker-circle)\"\n                    />\n                    {/* shades in area under the curve */}\n                    <AreaClosed\n                        fill=\"#5048E515\"\n                        curve={allCurves[curveType]}\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\n                        yScale={graphData.yScale}\n                    />\n                    {/* tooltip handling (just line and bar) */}\n                    <Bar\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill=\"transparent\"\n                        rx={14}\n                        onTouchStart={handleTooltip}\n                        onTouchMove={handleTooltip}\n                        onMouseMove={handleTooltip}\n                        onMouseLeave={() => hideTooltip()}\n                    />\n                    {tooltipData && (\n                        <g>\n                            <Line\n                            from={{ x: tooltipLeft, y: height * 0.08 }}\n                            to={{ x: tooltipLeft, y: height * 0.85}}\n                            stroke=\"#5048E5\"\n                            strokeWidth={2}\n                            pointerEvents=\"none\"\n                            strokeDasharray=\"5,2\"\n                            />\n                            <circle\n                            cx={tooltipLeft}\n                            cy={tooltipTop + 1}\n                            r={4}\n                            fill=\"black\"\n                            fillOpacity={0.1}\n                            stroke=\"black\"\n                            strokeOpacity={0.1}\n                            strokeWidth={2}\n                            pointerEvents=\"none\"\n                            />\n                            <circle\n                            cx={tooltipLeft}\n                            cy={tooltipTop}\n                            r={4}\n                            fill=\"#5048E5\"\n                            stroke=\"white\"\n                            strokeWidth={2}\n                            pointerEvents=\"none\"\n                            />\n                        </g>\n                    )})\n                </Group>\n                );\n            </svg>\n            </SVGContainer>\n            {/* tooltip labeling */}\n            {tooltipData && (\n            <div>\n                <TooltipWithBounds\n                    key={Math.random()}\n                    top={tooltipTop + 15}\n                    left={tooltipLeft + 40}\n                    \n                >\n                    {`${getY(tooltipData)}`}\n              </TooltipWithBounds>\n            </div>\n          )}\n        </GraphContainer>\n    )}\n\nconst Clickable = styled.img`\n  cursor: pointer;\n`;\n\nconst ButtonTray = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-direction: column;\n  position: absolute;\n  top: 30px;\n  left: ${props=> props.width - 40}px ;\n`\n\nconst GraphContainer = styled.div`\n  position: relative;\n  margin-top: 7px;\n  margin-bottom: 7px;\n`;\n\nconst SVGContainer = styled.div`\n  border-radius: 14px;\n  border: 1px solid #838181;\n  padding: 10px;\n  width: ${props=> props.width}px;\n`\n","import Graph from './Graph';\nimport DndList from '../../shared/DnDList';\nimport VertSpacer from '../../shared/VertSpacer';\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\nimport { Context } from '../../shared/Context';\n\nexport default function Graphs(props) {\n  let context = useContext(Context);\n // IF LIVE IS ON, THEN FEED TO API\n    useEffect(() => {\n    const interval = setInterval(() => {\n      if (context.live && context.session) {\n                  let reqBody = {\"desiredSensors\": context.selectedSensors, \"nameOfSession\": context.session}\n    \n            // POST request with current sensors selected to use for datpoint plotting later\n            var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \n            {\n              method: \"POST\", \n              headers: { 'Content-Type': 'application/json',\n              referrerPolicy: \"unsafe-url\",\n              'Access-Control-Allow-Origin': \"*\"\n            },\n            body: JSON.stringify(reqBody),\n            referrerPolicy: \"unsafe-url\",\n            })\n            .then((response) => response.json())\n            .then((user) => {\n            return user;\n            });\n    \n            const retrieveSensorAPI = () => {\n            sensorData.then((a) => {\n            context.setSensorData(a)\n            console.log(a)\n            });\n            };\n            retrieveSensorAPI();\n      }\n    }, 200);\n    // return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <DndList\n      items={props.sensors}\n      vspace={7}\n      setCurrentItems={(x) => props.setCurrentSensors(x)}\n    >\n      {props.sensors.map((e, index) => {\n        return (\n          <Graph\n            width={props.width}\n            sensorName={e.label}\n            key={index}\n            rerender={() => {props.rerender()}}\n          />\n        );\n      })}\n    </DndList>\n  );\n}","import styled from 'styled-components';\n\nexport default function VertIndicator(props) {\n  return(\n    <Line height={props.height} x={props.x} y={props.y} />\n  )\n}\n\nconst Line = styled.div`\n  height: ${props => props.height}px;\n  border-left: 2px solid #564fe6;\n  position: fixed;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n`;","import React, { useRef, useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport VertIndicator from './VertIndicator';\n\nimport useMouse from '../hooks/useMouse';\n\nimport { Context } from './Context';\n\n// Expected Props:\n/// items             list of dnd items\n/// itemWidth         width of child element\n/// itemHeight        height of child element\n/// vspace            vertical space between rows\n/// setCurrentItems   item setter\nexport default function DndFlex(props) {\n  let context = useContext(Context);\n  const { mouseX, mouseY } = useMouse();\n\n  const [state, setState] = useState({\n    startInd: -1,   // index of item that is being dragged\n    indicator: {\n      x: 0,         // coordinates of the dnd indicator\n      y: 0,\n    },\n    flexProps: {\n      cols: 0,      // # of columns in normal row\n      extraCols: 0, // # of columns in extra row\n      rows: 0,      // # of full rows\n    },\n    canDrop: true,\n  });\n  const [proppedChildren, setChildren] = useState(props.children);\n\n  const dndRef = useRef(null);\n\n  // Resize Listerners\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    handleResize();\n  }, [props.children]);\n\n  // Updates the bounding box upon resize\n  const handleResize = () => {\n    if (dndRef.current) {\n      setState(prevState => ({\n        ...prevState,\n        bounds: dndRef.current.getBoundingClientRect(),\n      }));\n    }\n  }\n\n  // Passes drag state to element as prop\n  useEffect(() => {\n    const addProps = (initProps) => {      \n      const updatedChildren = initProps.map((child, index) => {\n        return React.cloneElement(child, {\n          isDragging: context.dragging && index === state.startInd,\n        });\n      });\n\n      return updatedChildren;\n    }\n\n    setChildren(addProps(props.children));\n  }, [props.children, state.startInd]);\n\n  // DnD Handler\n  useEffect(() => {\n    // Helper for converting drop sector into drop index based on start index\n    const getDrop = (sector) => {\n      let startSector = 2 * state.startInd;\n      if (startSector - 1 <= sector && sector <= startSector + 2) {\n        return state.startInd;\n      } else if (sector < startSector) {\n        return state.startInd - Math.floor((startSector - sector) / 2);\n      } else {\n        return state.startInd + Math.floor((sector - startSector - 1) / 2);\n      }\n    }\n\n    // Ensures that the bounding box has loaded\n    if (state.bounds) {\n      // Ensures that mouse is in dnd zone\n      let sector = getSector(mouseX, mouseY);\n      if (sector >= 0) {\n        // If item getting dropped\n        // if (!context.dragging && state.startInd >= 0 && state.canDrop) {\n        if (!context.dragging && state.startInd >= 0) {\n          let drop = getDrop(sector);\n          \n          // Reorder items and propagate change\n          let temp = props.items[state.startInd];\n          props.items.splice(state.startInd, 1);\n          props.items.splice(drop, 0, temp);\n          props.setCurrentItems(props.items);\n\n          // Resets dnd start index\n          setState(prevState => ({\n            ...prevState,\n            startInd: -1,\n          }));\n        }\n\n        // Sets dnd start index if starting to drag\n        else {\n          setState(prevState => ({\n            ...prevState,\n            startInd: Math.floor(sector / 2),\n          }));\n        }\n      }\n    }\n  }, [context.dragging]);\n\n  // DnD Indicator Updating\n  useEffect(() => {\n    // Helper for updating indicator's coordinates\n    const indicatorCoords = (sector) => {\n      // Offset based on thickness of indicator in styling\n      let indicator_offset = 0.5\n\n      let x = Math.ceil((sector % (2 * state.flexProps.cols)) / 2);\n      let y = Math.floor(sector / (2 * state.flexProps.cols));\n\n      // Converts x index to x coordinate\n      switch(y < state.flexProps.rows) {\n        case true:\n          x *= (state.bounds.width / state.flexProps.cols) - indicator_offset;\n          break;\n        default:\n          switch(state.flexProps.extraCols) {\n            case 1:\n              x *= (state.bounds.width / (2 * state.flexProps.extraCols)) - indicator_offset;\n              x += (state.bounds.width / (4 * state.flexProps.extraCols));\n              break;\n            default:\n              x *= (state.bounds.width / state.flexProps.extraCols) - indicator_offset;\n          }\n      }\n      // Converts y index to y coordinate\n      y *= props.itemHeight + props.vSpace;\n\n      // Translates to be position relative to screen (rather than bounding box)\n      x += state.bounds.left;\n      y += state.bounds.top;\n      return {\n        x,\n        y,\n      };\n    }\n\n    // If bounds are loaded and mouse is in dnd zone\n    // updates the dnd indicator coordinates\n    if (state.bounds && state.canDrop) {\n      setState(prevState => ({\n        ...prevState,\n        indicator: indicatorCoords(getSector(mouseX, mouseY)),\n      }));\n    }\n  }, [mouseY, mouseX]);\n\n  // Stores relevent dimension data when bounds get loaded\n  useEffect(() => {\n    if (state.bounds) {\n      let cols = Math.floor(state.bounds.width / props.itemWidth);\n      setState(prevState => ({\n        ...prevState,\n        flexProps: {\n          cols,\n          extraCols: props.items.length % cols,\n          rows: Math.floor(props.items.length / cols),\n        },\n      }));\n    }\n  }, [state.bounds]);\n\n  // Gets the dnd sector that the mouse is in\n  const getSector = (_x, _y) => {\n    // Relative distance of mouse from corner of bounding box\n    let dy = _y - (state.bounds.top + (.5 * props.vSpace));\n    let dx = _x - state.bounds.left;\n\n    // If out of Bounds\n    if (dy < 0 || dy > (state.bounds.height - props.vSpace) || dx < 0 || dx > state.bounds.width) {\n      return -1;\n    }\n\n    // Iterates through full rows\n    let sector = 0;\n    for (let i = 0; i < state.flexProps.rows; i++) {\n      if (dy < (props.itemHeight + props.vSpace) * (i + 1)) {\n        for (let j = 0; j < (state.flexProps.cols * 2); j++) {\n          if (dx < (state.bounds.width / (state.flexProps.cols * 2)) * (j + 1)) {\n            return sector;\n          }\n          sector++;\n        }\n      } else {\n        sector += state.flexProps.cols * 2;\n      }\n    }\n\n    // Iterates through extra row\n    for (let j = 0; j < (state.flexProps.extraCols * 2); j++) {\n      if (dx < (state.bounds.width / (state.flexProps.extraCols * 2)) * (j + 1)) {\n        return sector;\n      }\n      sector++;\n    }\n\n    return -1;\n  }\n\n  return (\n    <FlexTray\n      vSpace={props.vSpace}\n      ref={dndRef}\n      onMouseEnter={() => {setState(prevState => ({\n        ...prevState,\n        canDrop: true,\n      }))}}\n      onMouseLeave={() => {setState(prevState => ({\n        ...prevState,\n        canDrop: false,\n      }))}}\n    >\n      {\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\n          <VertIndicator\n            height={props.itemHeight}\n            x={state.indicator.x}\n            y={state.indicator.y}\n          />\n      }\n      {proppedChildren}\n    </FlexTray>\n  );\n}\n\nconst FlexTray = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  margin-top: -${props => props.vSpace}px;\n  > * {\n    margin-top: ${props => props.vSpace}px;\n  }\n`;","import styled from 'styled-components';\n\nexport default function Number(props) {\n  return(\n    <NumberContainer translucent={props.isDragging}>\n      <Value>{props.value}</Value>\n      <Label unit>{props.unit}</Label>\n      <Label>{props.label}</Label>\n    </NumberContainer>\n  );\n}\n\nconst NumberContainer = styled.div`\n  width: 240px;\n  height: 190px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #424242;\n  user-select: none;\n  opacity: ${props => ((props.translucent) ? '0.4' : '1')};\n`;\n\nconst Value = styled.div`\n  font-size: 72px;\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\n`;\n\nconst Label = styled.div`\n  color: ${props => (props.unit ? '#000' : '#818181')};\n  margin-bottom: 10px;\n`;","import styled from 'styled-components';\n\nimport DndFlex from '../../shared/DnDFlex';\nimport Number from './Number';\nimport { Context } from \"../../shared/Context\"\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\n// renders each second or whatnot\nexport default function Numbers(props) {\n  let context = useContext(Context);\n // IF LIVE IS ON, THEN FEED TO API\n    useEffect(() => {\n    const interval = setInterval(() => {\n      if (context.live && context.session) {\n                  let reqBody = {\"desiredSensors\": context.selectedSensors, \"nameOfSession\": context.session}\n    \n            // POST request with current sensors selected to use for datpoint plotting later\n            var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \n            {\n              method: \"POST\", \n              headers: { 'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': \"*\"\n            },\n            body: JSON.stringify(reqBody),\n            referrerPolicy: \"unsafe-url\",\n            })\n            .then((response) => response.json())\n            .then((user) => {\n            return user;\n            });\n    \n            const retrieveSensorAPI = () => {\n            sensorData.then((a) => {\n            context.setSensorData(a)\n            });\n            };\n            retrieveSensorAPI();\n      }\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n\n\n  const ExampleSensorsLettersToNames = {\n    \"Front Left Wheel Speed\": [\"FL_WHEEL_SPEED\", \"Speed (m/s)\"],\n    \"Brake Pressure\": [\"BRAKE_PRESSURE\", \"Pounds/Square-Inch (PSI)\"],\n    \"HV Battery Voltage\": [\"HV_BATTERY_VOLTAGE\", \"Volts (V)\"],\n    \"Battery Temperature\": [\"BATTERY_TEMP\", \"Temperature  (°C)\"],\n    \"Coolant Temperature\": [\"COOLANT_TEMP\", \"Temperature  (°C)\"],\n    \"Power Output\": [\"POWER_OUTPUT\", \"Power (kW)\"],\n    \"State of Charge (SoC)\": [\"CHARGE_STATE\", \"Percent (%)\"],\n    \"Throttle\": [\"THROTTLE\", \"Percent (%)\"],\n    \"Motor Temperature\": [\"MOTOR_TEMP\", \"Temperature (°C)\"]\n  }\n  //context.sensorData[ExampleSensorsLettersToNames[e.value]][context.sensorData[ExampleSensorsLettersToNames[e.value]].length-1][1]}\n  function updateSensorValue(sensorName) {\n    return context.sensorData[sensorName][context.sensorData[sensorName].length-1][1]\n  }\n  return (\n    <SemiContext>\n      <DndFlex\n        //scrollHeight={props.scrollHeight}\n        vSpace={12}\n        itemWidth={240}\n        itemHeight={190}\n        items={props.sensors}\n        setCurrentItems={(x) => props.setCurrentSensors(x)}\n      >\n        {props.sensors.map((e, index) => {\n          return (\n            <Number\n              //rerender={() => {props.rerender()}}\n              value={updateSensorValue(ExampleSensorsLettersToNames[e.value][0])}\n              // value={3}\n              percentage={e.id}\n              unit={(ExampleSensorsLettersToNames[e.value][1])}\n              label={e.label}\n              key={index}\n            />\n          );\n        })}\n      </DndFlex>\n    </SemiContext>\n  );\n}\n\nconst SemiContext = styled.div`\n  position: relative;\n`;","import React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\n\nimport NumGraphToggle from './NumGraphToggle';\nimport Graphs from './Graphs';\nimport Numbers from './Numbers';\n\nimport { Context } from '../../shared/Context';\n\nimport StyledStatus from '../../shared/StyledStatus';\n\nexport default class DataDisplay extends Component {\n  static contextType = Context;\n\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dispType: 'graphs',\n      scrollAmt: 0,\n      whatthefuck: true,\n    }\n\n    this.containerRef = null;\n\n    this.setContainerRef = (element) => {\n      this.containerRef = element;\n    }\n\n    this.updateWidth = () => {\n      if (this.containerRef) {\n        this.content = (this.state.dispType==='graphs')\n          ? <Graphs\n              viewState={this.props.viewState}\n              sensors={this.props.sensors}\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\n              rerender={() => {this.setState({ whatthefuck: true })}}\n            />\n          : <Numbers\n              viewState={this.props.viewState}\n              scrollHeight={this.state.scrollAmt}\n              sensors={this.props.sensors}\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n            />;\n        this.setState({ whatthefuck: true });\n      }\n    }\n\n    this.handleScroll = () => {\n      const scrollAmt = this.containerRef.scrollTop;\n      this.setState({ scrollAmt });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWidth);\n    this.updateWidth();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  render() {\n    return(\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\n        <NumGraphToggle\n          dispType={this.state.dispType}\n          setDispType={(x) => this.setState({ dispType: x })}\n        />\n        {(this.props.sensors && this.props.sensors.length > 0)\n          ? this.state.dispType==='graphs'\n            ? <Graphs\n                viewState={this.props.viewState}\n                sensors={this.props.sensors}\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\n                rerender={() => {this.setState({ whatthefuck: true })}}\n              />\n            : <Numbers\n                viewState={this.props.viewState}\n                scrollHeight={this.state.scrollAmt}\n                sensors={this.props.sensors}\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n              />\n          : <StyledStatus>No Selected Sensors</StyledStatus>\n        }\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid #818181;\n  border-radius: 9px;\n  padding: 8px;\n  height: 100%;\n  padding-top: 50px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar-thumb {\n    background-color: #dadce0;\n    border: 4px solid transparent;\n    border-radius: 8px;\n    background-clip: padding-box;  \n  }\n  \n  ::-webkit-scrollbar {\n    width: 16px;\n  }\n`;","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Topbar from './topbar/Topbar';\nimport DataDisplay from './data-display/DataDisplay';\nimport VertSpacer from '../shared/VertSpacer';\n\nexport default function Main(props) {\n  let [viewState, setViewState] = useState('stop');\n\n  return(\n    <MainContainer>\n      <Topbar\n        isLive={props.isLive}\n        receiving={false}\n        viewState={viewState}\n        setViewState={(newState) => setViewState(newState)}\n      />\n      <VertSpacer />\n      <DataDisplay\n        viewState={viewState}\n        sensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n      />\n    </MainContainer>\n  );\n}\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 300px;\n  height: calc(100vh - 80px);\n  width: calc(100vw - 420px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 60px;\n  padding-right: 60px;\n  padding-bottom: 30px;\n  padding-top: 50px;\n`;","import { Component } from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport Sidebar from './components/sidebar/Sidebar';\nimport Main from './components/main/Main';\n\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\n\nimport { Context } from './components/shared/Context';\n\nexport default class App extends Component {\n  static contextType = Context;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLive: false,\n      currentSensors: [],\n      sessionName: ''\n    }\n  }\n  updateContextLive() {\n    this.context.setIsLive(this.state.isLive)\n    // console.log(this.context.session)\n  }\n  componentDidMount() {\n    // every second, update the context's live to the current this.state.isLIve value for later\n    const intervalId = setInterval(() => {\n      this.updateContextLive()\n    }, 1000);\n  }\n\n  handleMouseDown = (e) => {\n    this.context.setMouseCoords(e.clientX, e.clientY);\n    this.context.setDragging(true);\n  }\n\n  handleMouseUp = (e) => {\n    this.context.setMouseCoords(e.clientX, e.clientY);\n    this.context.setDragging(false);\n  }\n\n\n  render() {\n    return (\n      <div onMouseDown={(e) => {this.handleMouseDown(e)}} onMouseUp={(e) => {this.handleMouseUp(e)}}>\n        <GlobalStyle />\n        <Sidebar\n          isLive={this.state.isLive}\n          setIsLive={(next) => this.setState({ isLive: next })}\n          currentSensors={this.state.currentSensors}\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\n          setSessionName={(newState) => this.setState({ sessionName: newState })}\n          setSocketURL={(url) => this.setState({ socketURL: `ws://${url}:443` }, () => {\n            if (url) {\n              this.updateSocket();\n            }\n          })}\n          connected={this.state.connected}\n        />\n        <Main\n          isLive={this.state.isLive}\n          currentSensors={this.state.currentSensors}\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\n        />\n      </div>\n    );\n  }\n}\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './components/shared/Context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}